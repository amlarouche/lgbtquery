import Head from "next/head"
import { Box, Button, Flex, Heading, Input, Select, Text } from "@chakra-ui/react"
import axios from "axios"
import Link from "next/link"
import NavBar from "@/components/NavBar"
import { useState } from "react"
import ReposDisplay from "@/components/ReposDisplay"

export default function Home({ facts }: { facts: Record<string, any>[] }) {
  const [projectSearchTerm, setProjectSearchTerm] = useState("")
  const [languageSearchTerm, setLanguageSearchTerm] = useState("")
  const [reposArray, setReposArray] = useState([] as Record<string, any>[])

  const handleClick = async () => {
    const { data } = await axios.post("http://localhost:3000/api/repos", { searchTerm: projectSearchTerm, language: languageSearchTerm })
    setReposArray(data)
  }

  return (
    <>
      <Head>
        <title>LGBTQuery</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <NavBar isHomepage={true} />
      <Flex flexDir="column" height="100vh" justify="center" align="center">

        <Flex m="8px" border={"1px solid black"} borderRadius={"8px"} width={"40%"} height={"40%"} padding="32px" align="center" flexDir="column">
          <Heading size={"md"}>Hi there! Fill in your data</Heading>
          <Box margin={"32px"}>
            <Flex mt={"8px"}>
              <Text minWidth="128px">Project Type:</Text>
              <Input onChange={(e) => setProjectSearchTerm(e.target.value)} placeholder={'Enter a project idea...'}/>
            </Flex>
            <Flex mt={"8px"}>
              <Text minWidth="128px">Language:</Text>
              <Select onChange={(e) => setLanguageSearchTerm(e.target.value)} minWidth="256px" placeholder="Select a language">
                <option value="Javascript">Javascript</option>
                <option value="Python">Python</option>
              </Select>
            </Flex>
          </Box>
          <Button onClick={handleClick}>
            Search
          </Button>
        </Flex>
        {reposArray.length > 0 && <ReposDisplay repos={reposArray}/>}
      </Flex>
    </>
  )
}